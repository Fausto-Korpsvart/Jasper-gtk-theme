
//
// avatar
//

avatar {
  border-radius: $circular-radius;
  font-weight: bold;

  // The list of colors to generate avatars.
  // Each avatar color is represented by a font color, a gradient start color and a gradient stop color.
  // There are 8 different colors for avtars in the list if you change the number of them you
  // need to update the NUMBER_OF_COLORS in src/adw-avatar.c.
  // The 2D list has this form: ((font-color, gradient-top-color, gradient-bottom-color)).
  $avatarcolorlist: (
   (#cfe1f5, #83b6ec, #337fdc), // blue
   (#caeaf2, #7ad9f1, #0f9ac8), // cyan
   (#cef8d8, #8de6b1, #29ae74), // green
   (#e6f9d7, #b5e98a, #6ab85b), // lime
   (#f9f4e1, #f8e359, #d29d09), // yellow
   (#ffead1, #ffcb62, #d68400), // gold
   (#ffe5c5, #ffa95a, #ed5b00), // orange
   (#f8d2ce, #f78773, #e62d42), // raspberry
   (#fac7de, #e973ab, #e33b6a), // magenta
   (#e7c2e8, #cb78d4, #9945b5), // purple
   (#d5d2f5, #9e91e8, #7a59ca), // violet
   (#f2eade, #e3cf9c, #b08952), // beige
   (#e5d6ca, #be916d, #785336), // brown
   (#d8d7d3, #c0bfbc, #6e6d71), // gray
  );

  @for $i from 1 through length($avatarcolorlist) {
    &.color#{$i} {
      $avatarcolor: nth($avatarcolorlist, $i);
      background-image: linear-gradient(nth($avatarcolor, 2), nth($avatarcolor, 3));
      color: nth($avatarcolor, 1);
    }
  }

  &.contrasted { color: white; }

  &.image { background: none; }
}

//
// Cards
//

.card {
  @at-root %card, & {
    border-radius: $corner-radius;
    box-shadow: inset 0 1px highlight($surface), $shadow-z3;
    border: none;
    background-clip: padding-box;
    background-color: $surface;
    color: $text-secondary;
  }
}

//
// preferencespage
//

preferencespage > scrolledwindow > viewport > clamp > box {
  margin: 24px 12px;
  border-spacing: 24px;
}

preferencesgroup > box {
  &, .labels {
    border-spacing: $space-size;
  }

  > box.header:not(.single-line) {
    margin-bottom: $space-size;
  }

  > box.single-line {
    min-height: 34px;
  }

  button.background-preview-button.toggle {
    padding: 0;
    background: none;
    box-shadow: none;
    outline-color: transparent;
    outline-width: 3px;
    outline-offset: $space-size / 2;
    outline-style: solid;

    &, > background-preview {
      border-radius: 6px;
    }

    &:hover {
      outline-color: $fill;
    }

    &:active {
      outline-color: $track;
    }

    &:checked {
      outline-color: $primary;
    }
  }
}

//
// AdwAboutWindow
//

window.about {
  .main-page {
    > viewport > clamp > box {
      margin: $space-size * 2;
      border-spacing: $space-size;

      > box {
        margin-top: $space-size * 3;
        border-spacing: $space-size * 3;
        margin-bottom: $space-size;
      }
    }

    .app-version {
      padding: $space-size / 2 $space-size * 3;
      color: $primary;
      border-radius: $corner-radius;
      margin-top: $space-size / 2;
    }
  }

  .subpage {
    > viewport > clamp > box {
      margin: $space-size * 3 $space-size * 2;
      border-spacing: $space-size * 3;
    }

    > clamp > textview {
      background: none;
      color: inherit;
    }
  }
}


//
// AdwStatusPage
//

statuspage {
  > scrolledwindow > viewport > box {
    margin: 36px $space-size * 2;
    border-spacing: 36px;

    > clamp > box {
      border-spacing: $space-size * 2;

      > .icon {
        -gtk-icon-size: 128px;

        color: gtkalpha(currentColor, 0.55);

        &:disabled {
          opacity: 0.35;
        }

        &:not(:last-child) {
          margin-bottom: 24px;
        }
      }
    }
  }

  &.compact > scrolledwindow > viewport > box {
    margin: 24px 12px;
    border-spacing: 24px;

    > clamp > box {
      > .icon {
        -gtk-icon-size: 96px;

        &:not(:last-child) {
          margin-bottom: $space-size * 2;
        }
      }

      > .title {
        font-size: 18pt;
      }
    }
  }
}


//
// Toasts
//

toast {
  margin: $space-size * 2;
  margin-bottom: $space-size * 4;
  border-radius: $circular-radius;
  border-spacing: $space-size;
  padding: $space-size;
  box-shadow: $shadow-z6, inset 0 1px highlight($osd);
  background-color: $osd;
  color: on($osd);
  border: none;

  &:dir(ltr) { padding-left: $space-size * 2; }
  &:dir(rtl) { padding-right: $space-size * 2; }

  > label {
    margin: 0 $space-size;
  }

  button, button.text-button,
  button.circular.flat { @extend %button-on-dark; }
}

// Transition shadows
flap,
leaflet,
navigation-view,
overlay-split-view {
  @include transition-shadows($frame);
}

toolbarview.undershoot-top scrolledwindow {
  @include undershoot(top);
}

toolbarview.undershoot-bottom scrolledwindow {
  @include undershoot(bottom);
}

// Sidebar
.unfolded stacksidebar.sidebar { border: none; }

.sidebar-pane {
  background-color: $base-alt;
  color: $text;
  border-top-left-radius: $window-radius;

  &:backdrop {
    background-color: $background;
    transition: background-color $duration $ease-out;
  }

  headerbar {
    &, &:backdrop {
      background-color: transparent;
      box-shadow: none;
      border: none;
    }
  }

  .sidebar,
  .navigation-sidebar,
  searchbar > revealer > box {
    &, &:backdrop {
      background-color: transparent;
      box-shadow: none;
      border: none;
    }
  }

  toolbarview.undershoot-top scrolledwindow {
    @include undershoot(top);
  }

  toolbarview.undershoot-bottom scrolledwindow {
    @include undershoot(bottom);
  }

  scrolledwindow {
    &.undershoot-top {
      @include undershoot(top);
    }

    &.undershoot-bottom {
      @include undershoot(bottom)
    }

    &.undershoot-start {
      &:dir(ltr) { @include undershoot(left); }
      &:dir(rtl) { @include undershoot(right); }
    }

    &.undershoot-end {
      &:dir(ltr) { @include undershoot(right); }
      &:dir(rtl) { @include undershoot(left); }
    }
  }

  flap,
  leaflet,
  navigation-view,
  overlay-split-view {
    @include transition-shadows($frame);
  }

  banner > revealer > widget {
    background-color: gtkmix($primary, $base-alt, 30%);
    color: $text;

    &:backdrop {
      background-color: gtkmix($primary, $base-alt, 30%);
    }
  }

  &:dir(ltr), &.end:dir(rtl) {
    &, banner > revealer > widget {
      box-shadow: inset 0 1px highlight($base-alt);
      border-right: 1px solid $border;
    }
  }

  &:dir(rtl), &.end:dir(ltr) {
    &, banner > revealer > widget {
      box-shadow: inset 0 1px highlight($base-alt);
      border-left: 1px solid $border;
    }
  }

  .maximized &,
  .fullscreen &,
  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left & {
    border-radius: 0;

    &:dir(ltr), &.end:dir(rtl) {
      &, banner > revealer > widget {
        box-shadow: none;
      }
    }
  
    &:dir(rtl), &.end:dir(ltr) {
      &, banner > revealer > widget {
        box-shadow: none;
      }
    }
  }
}

/* Middle pane in three-pane setups */
.content-pane .sidebar-pane,
.sidebar-pane .content-pane {
  background-color: $base;
  color: $text;
  border-radius: 0;

  &:backdrop {
    background-color: $background;
    transition: background-color $duration $ease-out;
  }

  toolbarview.undershoot-top scrolledwindow {
    @include undershoot(top);
  }

  toolbarview.undershoot-bottom scrolledwindow {
    @include undershoot(bottom);
  }

  scrolledwindow {
    &.undershoot-top {
      @include undershoot(top);
    }

    &.undershoot-bottom {
      @include undershoot(bottom)
    }

    &.undershoot-start {
      &:dir(ltr) { @include undershoot(left); }
      &:dir(rtl) { @include undershoot(right); }
    }

    &.undershoot-end {
      &:dir(ltr) { @include undershoot(right); }
      &:dir(rtl) { @include undershoot(left); }
    }
  }

  flap,
  leaflet,
  navigation-view,
  overlay-split-view {
    @include transition-shadows($border);
  }

  banner > revealer > widget {
    background-color: gtkmix($primary, $base, 30%);
    color: $text;

    &:backdrop {
      background-color: gtkmix($primary, $base, 30%);
    }
  }

  &:dir(ltr), &.end:dir(rtl) {
    &, banner > revealer > widget {
      box-shadow: inset 0 1px highlight($base);
      border-right: 1px solid $border;
    }
  }

  &:dir(rtl), &.end:dir(ltr) {
    &, banner > revealer > widget {
      box-shadow: inset 0 1px highlight($base);
      border-left: 1px solid $border;
    }
  }

  .maximized &,
  .fullscreen &,
  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left & {
    border-radius: 0;

    &:dir(ltr), &.end:dir(rtl) {
      &, banner > revealer > widget {
        box-shadow: none;
      }
    }
  
    &:dir(rtl), &.end:dir(ltr) {
      &, banner > revealer > widget {
        box-shadow: none;
      }
    }
  }
}

.sidebar-pane .sidebar-pane {
  background-color: transparent;
  color: inherit;
}

.content-pane {
  background-color: $background;
  color: $text;
  border-top-right-radius: $window-radius;
  box-shadow: inset 0 1px highlight($background);

  headerbar {
    &, &:backdrop {
      background-color: transparent;
      box-shadow: none;
      border: none;
    }
  }

  .maximized &,
  .fullscreen &,
  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left & {
    border-radius: 0;
    box-shadow: none;
  }
}

.top-bar {
  background: none;
  box-shadow: none;

  .collapse-spacing {
    padding: 0;
  }
}
